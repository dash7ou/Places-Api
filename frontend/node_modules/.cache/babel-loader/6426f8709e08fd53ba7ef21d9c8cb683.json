{"ast":null,"code":"var _jsxFileName = \"/home/error/Desktop/React-Projects/place-api/frontend/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../utils/validators\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case \"TOUCH\":\n      return { ...state,\n        isTouched: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = ({\n  id,\n  label,\n  element,\n  type,\n  placeholder,\n  rows,\n  validators,\n  errorText,\n  value: oldValue,\n  onInput\n}) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: oldValue || \"\",\n    isValid: false,\n    isTouched: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators\n    });\n  };\n\n  const touchHandler = _ => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n  const elementForm = element === \"input\" ? React.createElement(\"input\", {\n    id: id,\n    type: type,\n    placeholder: placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : React.createElement(\"textarea\", {\n    id: id,\n    onChange: changeHandler,\n    rows: rows || 3,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  });\n  return React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, label, \" \"), elementForm, !inputState.isValid && inputState.isTouched && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/error/Desktop/React-Projects/place-api/frontend/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","id","label","element","placeholder","rows","errorText","oldValue","onInput","inputState","dispatch","changeHandler","event","target","touchHandler","_","elementForm"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../utils/validators\"\n\nimport \"./Input.css\"\n\nconst inputReducer = (state , action)=>{\n    switch(action.type){\n        case \"CHANGE\":\n            return{\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            }\n        case \"TOUCH\":\n            return{\n                ...state,\n                isTouched: true\n            }\n        default:\n            return state\n    }\n}\nconst Input = ({ id , label , element, type, placeholder , rows,validators, errorText,value: oldValue, onInput })=>{\n    const [ inputState, dispatch ] = useReducer( inputReducer, {value: oldValue || \"\", isValid: false, isTouched: false});\n\n    const changeHandler = event =>{\n        dispatch({type: \"CHANGE\", val: event.target.value, validators })\n    }\n\n    const touchHandler = _ =>{\n        dispatch({\n            type: 'TOUCH'\n        })\n    }\n    \n    const { value , isValid } = inputState;\n    useEffect(()=>{\n        onInput(id, value, isValid);\n    }, [id , value, isValid, onInput])\n\n    const elementForm = element === \"input\" ? (\n        <input \n            id={id} \n            type={type} \n            placeholder={placeholder}\n            onChange={changeHandler}\n            onBlur={touchHandler}\n            value={inputState.value}\n        />\n        ) : (\n            <textarea\n                id={id}\n                onChange={changeHandler}\n                rows = {rows || 3}\n                onBlur={touchHandler}\n                value={inputState.value}\n            />\n        )\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={id}>{ label } </label>\n            {elementForm}\n            {!inputState.isValid && inputState.isTouched  && <p>{errorText}</p>}\n        </div>\n    );\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}