{"ast":null,"code":"var _jsxFileName = \"/home/error/Desktop/React-Projects/place-api/frontend/src/places/pages/UpdatePlace.js\";\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/utils/validators';\nimport { useFrom } from \"../../shared/hooks/form-hook\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport \"./PlaceForm.css\";\n\nconst UpdatePlace = () => {\n  const placeId = useParams().placeId;\n  const [isLoading, error, sendRequest, clearError] = useHttpClient();\n  const [fromState, inputHandler, setFromData] = useFrom({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const data = sendRequest(`http://localhost:5000/api/v1/places/${placeId}`);\n    const {\n      title,\n      description\n    } = data;\n\n    if (title && description) {\n      setFromData({\n        title: {\n          value: title,\n          isValid: true\n        },\n        description: {\n          value: description,\n          isValid: true\n        }\n      }, true);\n    }\n  }, [setFromData, data]);\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(fromState.inputs);\n  };\n\n  return data && fromState.inputs.description.value ? React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"title\",\n    type: \"text\",\n    label: \"Title\",\n    element: \"input\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a vaild title.\",\n    onInput: inputHandler,\n    value: fromState.inputs.title.value,\n    valid: fromState.inputs.title.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"description\",\n    label: \"Description\",\n    element: \"textarea\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a vaild description at least 5 char.\",\n    onInput: inputHandler,\n    value: fromState.inputs.description.value,\n    valid: fromState.inputs.description.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !fromState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Update place\")) : React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Could not find place!\")));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["/home/error/Desktop/React-Projects/place-api/frontend/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","useParams","Button","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useFrom","Card","useHttpClient","UpdatePlace","placeId","isLoading","error","sendRequest","clearError","fromState","inputHandler","setFromData","title","value","isValid","description","data","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,+BAAvD;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,SAASC,aAAT,QAA8B,8BAA9B;AAEA,OAAO,iBAAP;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACzB,QAAMC,OAAO,GAAGT,SAAS,GAAGS,OAA5B;AACA,QAAM,CAAEC,SAAF,EAAcC,KAAd,EAAsBC,WAAtB,EAAoCC,UAApC,IAAmDN,aAAa,EAAtE;AAEA,QAAM,CAAEO,SAAF,EAAaC,YAAb,EAA2BC,WAA3B,IAA2CX,OAAO,CAAC;AACxDY,IAAAA,KAAK,EAAC;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,OAAO,EAAE;AAFJ,KADkD;AAKxDC,IAAAA,WAAW,EAAC;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE;AAL4C,GAAD,EASrD,KATqD,CAAxD;AAYApB,EAAAA,SAAS,CAAC,MAAI;AACb,UAAMsB,IAAI,GAAGT,WAAW,CAAE,uCAAsCH,OAAQ,EAAhD,CAAxB;AAEA,UAAM;AAACQ,MAAAA,KAAD;AAASG,MAAAA;AAAT,QAAyBC,IAA/B;;AAEA,QAAGJ,KAAK,IAAIG,WAAZ,EAAwB;AACvBJ,MAAAA,WAAW,CAAC;AACXC,QAAAA,KAAK,EAAC;AACLC,UAAAA,KAAK,EAAED,KADF;AAELE,UAAAA,OAAO,EAAE;AAFJ,SADK;AAKXC,QAAAA,WAAW,EAAC;AACXF,UAAAA,KAAK,EAAEE,WADI;AAEXD,UAAAA,OAAO,EAAE;AAFE;AALD,OAAD,EASR,IATQ,CAAX;AAUA;AACD,GAjBQ,EAiBN,CAACH,WAAD,EAAcK,IAAd,CAjBM,CAAT;;AAoBA,QAAMC,wBAAwB,GAAGC,KAAK,IAAG;AACxCA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAS,CAACa,MAAtB;AACA,GAHD;;AAKA,SACCN,IAAI,IAAIP,SAAS,CAACa,MAAV,CAAiBP,WAAjB,CAA6BF,KAArC,GACC;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEI,wBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AACC,IAAA,EAAE,EAAC,OADJ;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,KAAK,EAAC,OAHP;AAIC,IAAA,OAAO,EAAC,OAJT;AAKC,IAAA,UAAU,EAAE,CAAEnB,iBAAiB,EAAnB,CALb;AAMC,IAAA,SAAS,EAAC,6BANX;AAOC,IAAA,OAAO,EAAEY,YAPV;AAQC,IAAA,KAAK,EAAED,SAAS,CAACa,MAAV,CAAiBV,KAAjB,CAAuBC,KAR/B;AASC,IAAA,KAAK,EAAEJ,SAAS,CAACa,MAAV,CAAiBV,KAAjB,CAAuBE,OAT/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAYA,oBAAC,KAAD;AACC,IAAA,EAAE,EAAC,aADJ;AAEC,IAAA,KAAK,EAAC,aAFP;AAGC,IAAA,OAAO,EAAC,UAHT;AAIC,IAAA,UAAU,EAAE,CAAEf,mBAAmB,CAAC,CAAD,CAArB,CAJb;AAKC,IAAA,SAAS,EAAC,mDALX;AAMC,IAAA,OAAO,EAAEW,YANV;AAOC,IAAA,KAAK,EAAED,SAAS,CAACa,MAAV,CAAiBP,WAAjB,CAA6BF,KAPrC;AAQC,IAAA,KAAK,EAAEJ,SAAS,CAACa,MAAV,CAAiBP,WAAjB,CAA6BD,OARrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZA,EAsBA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACL,SAAS,CAACK,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBA,CADD,GA4BC;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADD,CADD,CA7BF;AAoCA,CA7ED;;AA+EA,eAAeX,WAAf","sourcesContent":["import React,{ useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/utils/validators';\nimport { useFrom } from \"../../shared/hooks/form-hook\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport \"./PlaceForm.css\"\n\nconst UpdatePlace = () => {\n\tconst placeId = useParams().placeId;\n\tconst [ isLoading , error , sendRequest , clearError ] = useHttpClient();\n\n\tconst [ fromState, inputHandler, setFromData ] = useFrom({\n\t\ttitle:{\n\t\t\tvalue: \"\",\n\t\t\tisValid: false\n\t\t},\n\t\tdescription:{\n\t\t\tvalue: \"\",\n\t\t\tisValid: false\n\t\t}\n\t}, false);\n\n\n\tuseEffect(()=>{\n\t\tconst data = sendRequest(`http://localhost:5000/api/v1/places/${placeId}`)\n\n\t\tconst {title , description } = data;\n\n\t\tif(title && description){\n\t\t\tsetFromData({\n\t\t\t\ttitle:{\n\t\t\t\t\tvalue: title,\n\t\t\t\t\tisValid: true\n\t\t\t\t},\n\t\t\t\tdescription:{\n\t\t\t\t\tvalue: description,\n\t\t\t\t\tisValid: true\n\t\t\t\t}\n\t\t\t}, true)\n\t\t}\n\t}, [setFromData, data])\n\n\n\tconst placeUpdateSubmitHandler = event =>{\n\t\tevent.preventDefault();\n\t\tconsole.log(fromState.inputs)\n\t}\n\n\treturn (\n\t\tdata && fromState.inputs.description.value ? (\n\t\t\t<form className='place-form' onSubmit={placeUpdateSubmitHandler}>\n\t\t\t<Input\n\t\t\t\tid='title'\n\t\t\t\ttype='text'\n\t\t\t\tlabel='Title'\n\t\t\t\telement='input'\n\t\t\t\tvalidators={[ VALIDATOR_REQUIRE() ]}\n\t\t\t\terrorText='Please enter a vaild title.'\n\t\t\t\tonInput={inputHandler}\n\t\t\t\tvalue={fromState.inputs.title.value}\n\t\t\t\tvalid={fromState.inputs.title.isValid}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\tid='description'\n\t\t\t\tlabel='Description'\n\t\t\t\telement='textarea'\n\t\t\t\tvalidators={[ VALIDATOR_MINLENGTH(5) ]}\n\t\t\t\terrorText='Please enter a vaild description at least 5 char.'\n\t\t\t\tonInput={inputHandler}\n\t\t\t\tvalue={fromState.inputs.description.value}\n\t\t\t\tvalid={fromState.inputs.description.isValid}\n\t\t\t/>\n\t\t\t<Button type='submit' disabled={!fromState.isValid}>\n\t\t\t\tUpdate place\n\t\t\t</Button>\n\t\t</form>\n\t\t):(\n\t\t\t<div className=\"center\">\n\t\t\t\t<Card>\n\t\t\t\t\t<h2>Could not find place!</h2>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t)\n\t);\n};\n\nexport default UpdatePlace;\n"]},"metadata":{},"sourceType":"module"}