{"ast":null,"code":"var _jsxFileName = \"/home/error/Desktop/React-Projects/place-api/frontend/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/utils/validators\";\nimport \"./NewPlace.css\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst NewPlace = () => {\n  useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: \"\",\n        isValid: false\n      },\n      description: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  const titleInputHandler = useCallback((id, value, isValid) => {}, []);\n  const descriptionInputHandler = useCallback((id, value, isValid) => {}, []);\n  return React.createElement(\"form\", {\n    className: \"place-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"title\",\n    type: \"text\",\n    label: \"Title\",\n    element: \"input\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a vaild title.\",\n    onInput: titleInputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    label: \"Description\",\n    errorText: \"Please enter at least 5 char\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    onInput: descriptionInputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/home/error/Desktop/React-Projects/place-api/frontend/src/places/pages/NewPlace.js"],"names":["React","useCallback","useReducer","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","formReducer","state","action","type","NewPlace","inputs","title","value","isValid","description","titleInputHandler","id","descriptionInputHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,UAA7B,QAA+C,OAA/C;AAEA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAsD,+BAAtD;AAEA,OAAO,gBAAP;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAASC,MAAT,KAAmB;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI;AACI,aAAOF,KAAP;AAFR;AAIH,CALD;;AAOA,MAAMG,QAAQ,GAAG,MAAI;AACjBR,EAAAA,UAAU,CAACI,WAAD,EAAe;AACrBK,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAC;AACFC,QAAAA,KAAK,EAAE,EADL;AAEFC,QAAAA,OAAO,EAAE;AAFP,OADF;AAKJC,MAAAA,WAAW,EAAC;AACRF,QAAAA,KAAK,EAAC,EADE;AAERC,QAAAA,OAAO,EAAE;AAFD;AALR,KADa;AAWrBA,IAAAA,OAAO,EAAE;AAXY,GAAf,CAAV;AAaA,QAAME,iBAAiB,GAAGf,WAAW,CAAC,CAACgB,EAAD,EAAKJ,KAAL,EAAYC,OAAZ,KAAsB,CAAE,CAAzB,EAA2B,EAA3B,CAArC;AACA,QAAMI,uBAAuB,GAAGjB,WAAW,CAAC,CAACgB,EAAD,EAAKJ,KAAL,EAAYC,OAAZ,KAAsB,CAAE,CAAzB,EAA2B,EAA3B,CAA3C;AACA,SACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAC,OADP;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,OAAO,EAAC,OAJZ;AAKI,IAAA,UAAU,EAAE,CAACV,iBAAiB,EAAlB,CALhB;AAMI,IAAA,SAAS,EAAC,6BANd;AAOI,IAAA,OAAO,EAAEY,iBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUI,oBAAC,KAAD;AACI,IAAA,EAAE,EAAC,aADP;AAEI,IAAA,OAAO,EAAC,UAFZ;AAGI,IAAA,KAAK,EAAC,aAHV;AAII,IAAA,SAAS,EAAC,8BAJd;AAKI,IAAA,UAAU,EAAE,CAACX,mBAAmB,CAAC,CAAD,CAApB,CALhB;AAMI,IAAA,OAAO,EAAEa,uBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAqBH,CArCD;;AAuCA,eAAeR,QAAf","sourcesContent":["import React, { useCallback, useReducer } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH} from \"../../shared/utils/validators\";\n\nimport \"./NewPlace.css\"\n\nconst formReducer = (state , action) =>{\n    switch(action.type){\n        default:\n            return state\n    }\n}\n\nconst NewPlace = ()=>{\n    useReducer(formReducer , {\n        inputs: {\n            title:{\n                value: \"\",\n                isValid: false\n            },\n            description:{\n                value:\"\",\n                isValid: false\n            }\n        },\n        isValid: false\n    })\n    const titleInputHandler = useCallback((id, value, isValid)=>{}, []);\n    const descriptionInputHandler = useCallback((id, value, isValid)=>{}, [])\n    return (\n        <form className=\"place-form\">\n            <Input \n                id=\"title\"\n                type=\"text\" \n                label=\"Title\" \n                element=\"input\"\n                validators={[VALIDATOR_REQUIRE()]}\n                errorText=\"Please enter a vaild title.\"\n                onInput={titleInputHandler}\n            />\n            <Input\n                id=\"description\"\n                element=\"textarea\"\n                label=\"Description\"\n                errorText=\"Please enter at least 5 char\"\n                validators={[VALIDATOR_MINLENGTH(5)]}\n                onInput={descriptionInputHandler}\n            />\n        </form>\n    )\n}\n\nexport default NewPlace;"]},"metadata":{},"sourceType":"module"}