{"ast":null,"code":"var _jsxFileName = \"/home/error/Desktop/React-Projects/place-api/frontend/src/user/pages/Auth.js\";\nimport React, { useState } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useFrom } from \"../../shared/hooks/form-hook\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/utils/validators\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setDateForm] = useFrom({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const onSwitchHandler = () => {\n    if (isLoginMode) {\n      setDateForm({ ...formState.inputs,\n        name: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setDateForm({ ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n  };\n\n  return React.createElement(Card, {\n    className: \"authentication\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Login Required\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: onSubmitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, !isLoginMode && React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid name\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"email\",\n    element: \"input\",\n    type: \"email\",\n    label: \"E-mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"password\",\n    element: \"input\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password at least 5 characters.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, isLoginMode ? \"Login\" : \"SignUp\"), React.createElement(Button, {\n    inverse: true,\n    onClick: onSwitchHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Switch To \", isLoginMode ? \"Login\" : \"SignUp\")));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/home/error/Desktop/React-Projects/place-api/frontend/src/user/pages/Auth.js"],"names":["React","useState","Card","Input","Button","useFrom","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","Auth","isLoginMode","setIsLoginMode","formState","inputHandler","setDateForm","email","value","isValid","password","onSwitchHandler","inputs","name","undefined","prevMode","onSubmitForm","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { useFrom } from \"../../shared/hooks/form-hook\";\nimport {\n    VALIDATOR_EMAIL,\n    VALIDATOR_MINLENGTH,\n    VALIDATOR_REQUIRE\n} from \"../../shared/utils/validators\";\n\nimport \"./Auth.css\"\n\nconst Auth = ()=>{\n    const [ isLoginMode, setIsLoginMode ] = useState(true);\n    const [ formState , inputHandler, setDateForm ] = useFrom({\n        email: {\n            value: \"\",\n            isValid: false,\n        },\n        password: {\n            value: \"\",\n            isValid: false\n        }\n    }, false);\n\n    const onSwitchHandler = ()=>{\n        if(isLoginMode){\n            setDateForm({\n                ...formState.inputs,\n                name: undefined\n            }, formState.inputs.email.isValid && formState.inputs.password.isValid)\n        }else{\n            setDateForm({\n                ...formState.inputs,\n                name: {\n                    value: \"\",\n                    isValid: false\n                }\n            }, false)\n        }\n        setIsLoginMode(prevMode => !prevMode)\n    }\n\n    const onSubmitForm = (event)=>{\n        event.preventDefault();\n        console.log(formState.inputs)\n    }\n    return (\n        <Card className=\"authentication\">\n            <h2>Login Required</h2>\n            <hr/>\n            <form onSubmit={onSubmitForm}>\n                {\n                    !isLoginMode && <Input \n                        element=\"input\"\n                        id=\"name\"\n                        type=\"text\"\n                        label=\"Name\"\n                        validators={[VALIDATOR_REQUIRE()]}\n                        errorText=\"Please enter a valid name\"\n                        onInput={inputHandler}\n                    />\n                }\n                <Input \n                    id=\"email\"\n                    element=\"input\"\n                    type=\"email\"\n                    label=\"E-mail\"\n                    validators={[VALIDATOR_EMAIL()]}\n                    errorText=\"Please enter a valid email address.\"\n                    onInput={inputHandler}\n                />\n                <Input \n                    id=\"password\"\n                    element=\"input\"\n                    type=\"password\"\n                    label=\"Password\"\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter a valid password at least 5 characters.\"\n                    onInput={inputHandler}\n                />\n                <Button type=\"submit\" disabled={!formState.isValid}>{ isLoginMode ? \"Login\" : \"SignUp\" }</Button>\n                <Button inverse onClick={onSwitchHandler}>Switch To { isLoginMode ? \"Login\" : \"SignUp\" }</Button>\n            </form>\n        </Card>\n    )\n}\n\n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}