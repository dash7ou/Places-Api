{"ast":null,"code":"var _jsxFileName = \"/home/error/Desktop/React-Projects/place-api/frontend/src/App.js\";\nimport React, { useState, useCallback, Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Users from \"./user/pages/User\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport NewPlace from \"./places/pages/NewPlace\";\nimport UserPlaces from \"./places/pages/UserPlaces\";\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\nimport Auth from \"./user/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport './App.css';\n\nconst App = () => {\n  const [isLoggedIn, setISLoggedIn] = useState(false);\n  const login = useCallback(() => {\n    setISLoggedIn(true);\n  }, []);\n  const logout = useCallback(() => {\n    setISLoggedIn(false);\n  }, []);\n  let routes;\n\n  if (isLoggedIn) {\n    routes = React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/:userId/places\",\n      exact: true,\n      component: UserPlaces,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/places/new\",\n      exact: true,\n      component: NewPlace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/places/:placeId\",\n      component: UpdatePlace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  } else {\n    routes = React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Users,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/:userId/places\",\n      exact: true,\n      component: UserPlaces,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/auth\",\n      exact: true,\n      component: Auth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/auth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      login,\n      logout\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(MainNavigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, routes)));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/error/Desktop/React-Projects/place-api/frontend/src/App.js"],"names":["React","useState","useCallback","Fragment","BrowserRouter","Router","Switch","Route","Redirect","Users","MainNavigation","NewPlace","UserPlaces","UpdatePlace","Auth","AuthContext","App","isLoggedIn","setISLoggedIn","login","logout","routes"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, Fragment } from 'react';\nimport { BrowserRouter as Router , Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Users from \"./user/pages/User\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport NewPlace from \"./places/pages/NewPlace\";\nimport UserPlaces from \"./places/pages/UserPlaces\";\nimport UpdatePlace from \"./places/pages/UpdatePlace\";\nimport Auth from \"./user/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\n\nimport './App.css';\n\nconst App = ()=> {\n  const [isLoggedIn, setISLoggedIn ] = useState(false);\n\n  const login = useCallback(()=>{\n    setISLoggedIn(true);\n  }, [])\n  const logout = useCallback(()=>{\n    setISLoggedIn(false);\n  }, [])\n\n  let routes;\n  if(isLoggedIn){\n    routes = (<Switch>\n      <Route path=\"/\" exact component={Users}/>\n      <Route path=\"/:userId/places\" exact component={UserPlaces} />\n      <Route path=\"/places/new\" exact component={NewPlace} />\n      <Route path=\"/places/:placeId\" component={UpdatePlace} />\n      <Redirect to=\"/\" />\n    </Switch>)\n  }else{\n    routes = (<Fragment>\n      <Route path=\"/\" exact component={Users}/>\n      <Route path=\"/:userId/places\" exact component={UserPlaces} />\n      <Route path=\"/auth\" exact component={Auth} />\n      <Redirect to=\"/auth\" />\n    </Fragment>)\n  }\n  return (\n    <AuthContext.Provider\n      value={\n        {\n          isLoggedIn: isLoggedIn,\n          login,\n          logout\n        }\n      }\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          {routes}\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}