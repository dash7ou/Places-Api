{"ast":null,"code":"var _jsxFileName = \"/home/error/Desktop/React-Projects/place-api/frontend/src/places/pages/UpdatePlace.js\";\nimport React, { useEffect, Fragment, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/utils/validators';\nimport { useFrom } from \"../../shared/hooks/form-hook\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal.js\";\nimport Spinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceForm.css\";\n\nconst UpdatePlace = () => {\n  const placeId = useParams().placeId;\n  const [isLoading, error, sendRequest, clearError] = useHttpClient();\n  const {\n    userId\n  } = useContext(AuthContext);\n  const [fromState, inputHandler, setFromData] = useFrom({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  const history = useHistory();\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await sendRequest(`http://localhost:5000/api/v1/places/${placeId}`);\n        const {\n          title,\n          description\n        } = data;\n\n        if (title && description) {\n          setFromData({\n            title: {\n              value: title,\n              isValid: true\n            },\n            description: {\n              value: description,\n              isValid: true\n            }\n          }, true);\n        }\n      } catch (err) {}\n    };\n\n    getData();\n  }, [placeId, setFromData, sendRequest]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest(`http://localhost:5000/api/v1/places/${placeId}`, 'PATCH', JSON.stringify({\n        title: fromState.inputs.title.value,\n        description: fromState.inputs.description.value\n      }), {\n        \"Content-Type\": \"application/json\"\n      });\n      history.push(`/places`);\n    } catch (err) {}\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, isLoading && React.createElement(Spinner, {\n    asOverlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), !isLoading && fromState.inputs.description.value ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"title\",\n    type: \"text\",\n    label: \"Title\",\n    element: \"input\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a vaild title.\",\n    onInput: inputHandler,\n    value: fromState.inputs.title.value,\n    valid: fromState.inputs.title.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"description\",\n    label: \"Description\",\n    element: \"textarea\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a vaild description at least 5 char.\",\n    onInput: inputHandler,\n    value: fromState.inputs.description.value,\n    valid: fromState.inputs.description.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !fromState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Update place\"))) : React.createElement(\"div\", {\n    className: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Could not find place!\"))));\n};\n\nexport default UpdatePlace;","map":{"version":3,"sources":["/home/error/Desktop/React-Projects/place-api/frontend/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","Fragment","useContext","useParams","useHistory","Button","Input","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useFrom","Card","useHttpClient","ErrorModal","Spinner","AuthContext","UpdatePlace","placeId","isLoading","error","sendRequest","clearError","userId","fromState","inputHandler","setFromData","title","value","isValid","description","history","getData","data","err","placeUpdateSubmitHandler","event","preventDefault","JSON","stringify","inputs","push"],"mappings":"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","sourcesContent":["import React,{ useEffect, Fragment, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport Input from '../../shared/components/FormElements/Input';\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/utils/validators';\nimport { useFrom } from \"../../shared/hooks/form-hook\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal.js\";\nimport Spinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\"\n\nimport \"./PlaceForm.css\"\n\nconst UpdatePlace = () => {\n\tconst placeId = useParams().placeId;\n\tconst [ isLoading , error , sendRequest , clearError ] = useHttpClient();\n\tconst { userId } = useContext(AuthContext);\n\n\tconst [ fromState, inputHandler, setFromData ] = useFrom({\n\t\ttitle:{\n\t\t\tvalue: \"\",\n\t\t\tisValid: false\n\t\t},\n\t\tdescription:{\n\t\t\tvalue: \"\",\n\t\t\tisValid: false\n\t\t}\n\t}, false);\n\n\tconst history = useHistory()\n\n\n\tuseEffect(()=>{\n\t\tconst getData = async ()=>{\n\t\t\ttry{\n\t\t\t\tconst data = await sendRequest(`http://localhost:5000/api/v1/places/${placeId}`);\n\t\t\t\tconst {title , description } = data;\n\t\t\t\tif(title && description){\n\t\t\t\t\tsetFromData({\n\t\t\t\t\t\ttitle:{\n\t\t\t\t\t\t\tvalue: title,\n\t\t\t\t\t\t\tisValid: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdescription:{\n\t\t\t\t\t\t\tvalue: description,\n\t\t\t\t\t\t\tisValid: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}, true)\n\t\t\t\t}\n\t\t\t}catch(err){}\n\t\t}\n\t\tgetData();\n\n\t}, [placeId, setFromData,sendRequest])\n\n\n\tconst placeUpdateSubmitHandler = async event =>{\n\t\tevent.preventDefault();\n\t\ttry{\n\t\t\tawait sendRequest(`http://localhost:5000/api/v1/places/${placeId}`, 'PATCH', JSON.stringify({\n\t\t\t\ttitle: fromState.inputs.title.value,\n\t\t\t\tdescription:fromState.inputs.description.value\n\t\t\t}),{\n\t\t\t\t\"Content-Type\":\"application/json\"\n\t\t\t})\n\t\t\thistory.push(`/places`)\n\t\t}catch(err){}\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t{isLoading && <Spinner asOverlay/>}\n\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t{!isLoading && fromState.inputs.description.value ? (\n\t\t\t<Fragment>\n\t\t\t<form className='place-form' onSubmit={placeUpdateSubmitHandler}>\n\t\t\t<Input\n\t\t\t\tid='title'\n\t\t\t\ttype='text'\n\t\t\t\tlabel='Title'\n\t\t\t\telement='input'\n\t\t\t\tvalidators={[ VALIDATOR_REQUIRE() ]}\n\t\t\t\terrorText='Please enter a vaild title.'\n\t\t\t\tonInput={inputHandler}\n\t\t\t\tvalue={fromState.inputs.title.value}\n\t\t\t\tvalid={fromState.inputs.title.isValid}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\tid='description'\n\t\t\t\tlabel='Description'\n\t\t\t\telement='textarea'\n\t\t\t\tvalidators={[ VALIDATOR_MINLENGTH(5) ]}\n\t\t\t\terrorText='Please enter a vaild description at least 5 char.'\n\t\t\t\tonInput={inputHandler}\n\t\t\t\tvalue={fromState.inputs.description.value}\n\t\t\t\tvalid={fromState.inputs.description.isValid}\n\t\t\t/>\n\t\t\t<Button type='submit' disabled={!fromState.isValid}>\n\t\t\t\tUpdate place\n\t\t\t</Button>\n\t\t</form>\n\t\t</Fragment>\n\t\t):(\n\t\t\t<div className=\"center\">\n\t\t\t\t<Card>\n\t\t\t\t\t<h2>Could not find place!</h2>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t)}\n\t\t</Fragment>\n\t)\n};\n\nexport default UpdatePlace;\n"]},"metadata":{},"sourceType":"module"}