{"ast":null,"code":"var _jsxFileName = \"/home/error/Desktop/React-Projects/place-api/frontend/src/places/pages/NewPlace.js\";\nimport React, { useContext, Fragment } from 'react';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport Spinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/utils/validators';\nimport { useFrom } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n  const [isLoading, error, sendRequest, clearError] = useHttpClient();\n  const {\n    userId\n  } = useContext(AuthContext);\n  const [formState, inputHandler] = useFrom({\n    title: {\n      value: '',\n      isValid: false\n    },\n    description: {\n      value: '',\n      isValid: false\n    },\n    address: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n\n    try {\n      await sendRequest(\"http://localhost:5000/api/v1/places\", 'POST', JSON.stringify({\n        title: formState.inputs.title.value,\n        description: formState.inputs.description.value,\n        address: formState.inputs.address.value,\n        creator: userId\n      }), {\n        'Content-Type': \"application/json\"\n      }); //redirect user to different page\n    } catch (err) {}\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(ErrorModal, {\n    error: error,\n    onClear: clearError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), isLoading && React.createElement(Spinner, {\n    asOverlay: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"title\",\n    type: \"text\",\n    label: \"Title\",\n    element: \"input\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a vaild title.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"description\",\n    label: \"Description\",\n    element: \"textarea\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a vaild description at least 5 char.\",\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Input, {\n    id: \"address\",\n    element: \"input\",\n    label: \"Address\",\n    errorText: \"Please enter a valid address\",\n    validators: [VALIDATOR_REQUIRE()],\n    onInput: inputHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Add place\")));\n};\n\nexport default NewPlace;","map":{"version":3,"sources":["/home/error/Desktop/React-Projects/place-api/frontend/src/places/pages/NewPlace.js"],"names":["React","useContext","Fragment","Input","Button","ErrorModal","Spinner","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useFrom","useHttpClient","AuthContext","NewPlace","isLoading","error","sendRequest","clearError","userId","formState","inputHandler","title","value","isValid","description","address","placeSubmitHandler","event","preventDefault","JSON","stringify","inputs","creator","err"],"mappings":"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","sourcesContent":["import React, { useContext, Fragment } from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport Spinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/utils/validators';\nimport { useFrom } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport {AuthContext} from \"../../shared/context/auth-context\";\n\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n\tconst [isLoading,  error , sendRequest, clearError ] = useHttpClient();\n\tconst { userId } = useContext(AuthContext)\n\tconst [formState , inputHandler] = useFrom(\n\t\t{\n\t\t\ttitle: {\n\t\t\t\tvalue: '',\n\t\t\t\tisValid: false\n\t\t\t},\n\t\t\tdescription: {\n\t\t\t\tvalue: '',\n\t\t\t\tisValid: false\n\t\t\t},\n\t\t\taddress:{\n\t\t\t\tvalue: \"\",\n\t\t\t\tisValid: false\n\t\t\t}\n\t\t}, false\n\t);\n\n\n\tconst placeSubmitHandler = async (event) => {\n\t\tevent.preventDefault();\n\t\ttry{\n\t\t\tawait sendRequest(\"http://localhost:5000/api/v1/places\", 'POST', JSON.stringify({\n\t\t\t\ttitle: formState.inputs.title.value,\n\t\t\t\tdescription: formState.inputs.description.value,\n\t\t\t\taddress: formState.inputs.address.value,\n\t\t\t\tcreator: userId\n\t\t\t}), {\n\t\t\t\t'Content-Type':\"application/json\"\n\t\t\t})\n\n\t\t\t//redirect user to different page\n\t\t}catch(err){}\n\n\t};\n\treturn (\n\t\t<Fragment>\n\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t{isLoading && <Spinner asOverlay />}\n\t\t<form className='place-form' onSubmit={placeSubmitHandler}>\n\t\t\t<Input\n\t\t\t\tid='title'\n\t\t\t\ttype='text'\n\t\t\t\tlabel='Title'\n\t\t\t\telement='input'\n\t\t\t\tvalidators={[ VALIDATOR_REQUIRE() ]}\n\t\t\t\terrorText='Please enter a vaild title.'\n\t\t\t\tonInput={inputHandler}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\tid='description'\n\t\t\t\tlabel='Description'\n\t\t\t\telement='textarea'\n\t\t\t\tvalidators={[ VALIDATOR_MINLENGTH(5) ]}\n\t\t\t\terrorText='Please enter a vaild description at least 5 char.'\n\t\t\t\tonInput={inputHandler}\n\t\t\t/>\n\t\t\t<Input\n\t\t\t\tid='address'\n\t\t\t\telement='input'\n\t\t\t\tlabel='Address'\n\t\t\t\terrorText='Please enter a valid address'\n\t\t\t\tvalidators={[ VALIDATOR_REQUIRE() ]}\n\t\t\t\tonInput={inputHandler}\n\t\t\t/>\n\t\t\t<Button type='submit' disabled={!formState.isValid}>\n\t\t\t\tAdd place\n\t\t\t</Button>\n\t\t</form>\n\t\t</Fragment>\n\t);\n};\n\nexport default NewPlace;\n"]},"metadata":{},"sourceType":"module"}